<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
    <file:config doc:id="8ccaf83a-3211-4891-bd00-ccbe3935fb16" doc:name="File Config" name="File_Config"></file:config>
    <file:matcher doc:id="csv-matcher" doc:name="CSV File Matcher" filenamePattern="IFIDC0006_*.csv" name="csvFileMatcher"></file:matcher>
    <http:request-config name="HTTP_Request_configuration" doc:name="HTTP Request configuration" doc:id="b8c9a8e1-4f2d-4c8a-9b1e-2f3d4e5f6a7b">
        <http:request-connection host="shipping-papi.jp-e1.cloudhub.io" port="80" protocol="HTTP"/>
    </http:request-config>
    <flow doc:id="cebf8f3b-2c03-49a3-a3ea-49f9e9a41976" name="cc4dmeapiFlow">
		<file:listener doc:name="CSV File Listener" doc:id="2a276403-aef5-4f05-aaa0-1e0fc0402055" 
			config-ref="File_Config" 
			directory="/Users/ykurozumi/test_data/input" 
			moveToDirectory="/Users/ykurozumi/test_data/processed"
			matcher="csvFileMatcher" renameTo='#[now() ++ ".csv"]'>
			<scheduling-strategy >
				<fixed-frequency frequency="10" timeUnit="SECONDS"/>
			</scheduling-strategy>
		</file:listener>
        <logger doc:id="log-start" doc:name="Log File Processing Start" level="INFO" message="Processing CSV file: #[attributes.fileName]"></logger>
        
        <!-- Store original file attributes for later use -->
        <set-variable doc:id="store-filename" doc:name="Store File Name" variableName="originalFileName" value="#[attributes.fileName]"/>
        
        <ee:transform doc:id="78d34b4d-f08a-4f52-a26b-da69b4dbd245" doc:name="Store CSV Data">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-payload>
            </ee:message>
        </ee:transform>
        
        <logger doc:id="log-record-count" doc:name="Log Record Count" level="INFO" message="Processing #[sizeOf(payload)] CSV records"/>
        
        <!-- Loop through each CSV record -->
        <foreach doc:id="foreach-csv-records" doc:name="For Each CSV Record" collection="#[payload]">
            <logger doc:id="log-processing-record" doc:name="Log Processing Record" level="INFO" message="Processing record: #[payload.ShipmentNo]"/>
            
            <!-- Transform single CSV record to JSON format for Shipping API -->
            <ee:transform doc:id="transform-single-record" doc:name="Transform Single Record">
                <ee:message>
                    <ee:set-payload><![CDATA[%dw 2.0
output application/json
fun nullIfEmpty(value) = if (isEmpty(value) or value == "" or value == null) null else value
fun toNumber(value) = 
    if (isEmpty(value) or value == "" or value == null) 
        null 
    else (
        // Check if the value looks like a datetime string and return null if so
        if (value is String and ((value contains "/") and (value contains ":")) or ((value contains "-") and (value contains "T")))
            null
        else
            (value as Number)
    )
fun toString(value) = if (isEmpty(value) or value == null) null else (value as String)
fun formatDate(dateValue) = 
    if (isEmpty(dateValue) or dateValue == "" or dateValue == null) 
        null 
    else (
        // 数値または文字列のYYYYMMDD形式をYYYY-MM-DD形式に変換
        do {
            var dateStr = toString(dateValue)
            ---
            if (dateStr != null and sizeOf(dateStr) == 8)
                dateStr[0 to 3] ++ "-" ++ dateStr[4 to 5] ++ "-" ++ dateStr[6 to 7]
            else
                null // 不正な形式の場合はnull
        }
    )
fun formatDateTime(dateTimeStr) = 
    if (isEmpty(dateTimeStr) or dateTimeStr == "" or dateTimeStr == null) 
        null 
    else (
        // YYYY/MM/DD HH:MM形式をISO 8601形式に変換
        do {
            var cleanStr = toString(dateTimeStr)
            ---
            if (cleanStr != null and (cleanStr contains "/") and (cleanStr contains " ") and (cleanStr contains ":"))
                (cleanStr replace "/" with "-" replace " " with "T") ++ ":00"
            else
                null // 不正な形式の場合はnull
        }
    )
fun validateRequired(value, fieldName) = 
    if (isEmpty(value) or value == "" or value == null)
        error("Required field '" ++ fieldName ++ "' is missing or empty")
    else
        value
fun validateRequiredNumber(value, fieldName) = 
    if (isEmpty(value) or value == "" or value == null)
        error("Required field '" ++ fieldName ++ "' is missing or empty")
    else
        toNumber(value)
fun validateRequiredString(value, fieldName) = 
    if (isEmpty(value) or value == "" or value == null)
        error("Required field '" ++ fieldName ++ "' is missing or empty")
    else
        toString(value)
---
{
	// 整数型フィールド (Shipping APIでintegerとして定義されているフィールド)
	// 必須フィールドの検証
	DataKbn: validateRequiredNumber(payload.DataKbn, "DataKbn"),
	UpdateKbn: validateRequiredNumber(payload.UpdateKbn, "UpdateKbn"),
	ShipmentKbn: validateRequiredNumber(payload.ShipmentKbn, "ShipmentKbn"),
	DlvBaseKbn: toNumber(payload.DlvBaseKbn),
	ShipmentLineSeq: validateRequiredNumber(payload.ShipmentLineSeq, "ShipmentLineSeq"),
	SetCommodityKbn: toNumber(payload.SetCommodityKbn),
	ShipmentQty: validateRequiredNumber(payload.ShipmentQty, "ShipmentQty"),
	SalesPrice: toNumber(payload.SalesPrice),
	OrderCommodityYen: toNumber(payload.OrderCommodityYen),
	DiscountYen: toNumber(payload.DiscountYen),
	OrderCommodityTax: toNumber(payload.OrderCommodityTax),
	WrappingFee: toNumber(payload.WrappingFee),
	WrappingFeeTax: toNumber(payload.WrappingFeeTax),
	SetShipmentQty: toNumber(payload.SetShipmentQty),
	SetSalesPrice: toNumber(payload.SetSalesPrice),
	SetOrderCommodityYen: toNumber(payload.SetOrderCommodityYen),
	SetDiscountYen: toNumber(payload.SetDiscountYen),
	SetOrderCommodityTax: toNumber(payload.SetOrderCommodityTax),
	Charge: toNumber(payload.Charge),
	ChargeTax: toNumber(payload.ChargeTax),
	Shipping: toNumber(payload.Shipping),
	ShippingTax: toNumber(payload.ShippingTax),
	AdvancedYen: toNumber(payload.AdvancedYen),
	StaffSalesFlg: toNumber(payload.StaffSalesFlg),
	PayMethodKbn: toNumber(payload.PayMethodKbn),
	DLVOutForGIFTKbn: toNumber(payload.DLVOutForGIFTKbn),
	UseEnablePoint: toNumber(payload.UseEnablePoint),
	UsePoint: toNumber(payload.UsePoint),
	OccurSchedulePoint: toNumber(payload.OccurSchedulePoint),
	UseSchedulePoint: toNumber(payload.UseSchedulePoint),
	CampainPoint: toNumber(payload.CampainPoint),
	TotalPoint: toNumber(payload.TotalPoint),
	LapseNextMonth: toNumber(payload.LapseNextMonth),
	LapseNextMonthPoint: toNumber(payload.LapseNextMonthPoint),
	LapseNextMonth2: toNumber(payload.LapseNextMonth2),
	LapseNextMonthPoint2: toNumber(payload.LapseNextMonthPoint2),
	NextDlvShipmentQty1: toNumber(payload.NextDlvShipmentQty1),
	NextDlvOrderCommodityYen1: toNumber(payload.NextDlvOrderCommodityYen1),
	NextDlvShipmentQty2: toNumber(payload.NextDlvShipmentQty2),
	NextDlvOrderCommodityYen2: toNumber(payload.NextDlvOrderCommodityYen2),
	NextDlvShipmentQty3: toNumber(payload.NextDlvShipmentQty3),
	NextDlvOrderCommodityYen3: toNumber(payload.NextDlvOrderCommodityYen3),
	NextDlvShipmentQty4: toNumber(payload.NextDlvShipmentQty4),
	NextDlvOrderCommodityYen4: toNumber(payload.NextDlvOrderCommodityYen4),
	NextDlvShipmentQty5: toNumber(payload.NextDlvShipmentQty5),
	NextDlvOrderCommodityYen5: toNumber(payload.NextDlvOrderCommodityYen5),
	NextDlvShipmentQty6: toNumber(payload.NextDlvShipmentQty6),
	NextDlvOrderCommodityYen6: toNumber(payload.NextDlvOrderCommodityYen6),
	NextDlvShipmentQty7: toNumber(payload.NextDlvShipmentQty7),
	NextDlvOrderCommodityYen7: toNumber(payload.NextDlvOrderCommodityYen7),
	NextDlvShipmentQty8: toNumber(payload.NextDlvShipmentQty8),
	NextDlvOrderCommodityYen8: toNumber(payload.NextDlvOrderCommodityYen8),
	NextDlvShipmentQty9: toNumber(payload.NextDlvShipmentQty9),
	NextDlvOrderCommodityYen9: toNumber(payload.NextDlvOrderCommodityYen9),
	NextDlvShipmentQty10: toNumber(payload.NextDlvShipmentQty10),
	NextDlvOrderCommodityYen10: toNumber(payload.NextDlvOrderCommodityYen10),
	OrderPriceCutYen: toNumber(payload.OrderPriceCutYen),
	PointLapseSchedulePoint: toNumber(payload.PointLapseSchedulePoint),
	SaleYenYear: toNumber(payload.SaleYenYear),
	NextDlvCharge: toNumber(payload.NextDlvCharge),
	PurchaseListKbn: toNumber(payload.PurchaseListKbn),
	RankJudgeTotalSalesYen: toNumber(payload.RankJudgeTotalSalesYen),
	TaxRateKbn: toNumber(payload.TaxRateKbn),
	TaxTaxKbn: toNumber(payload.TaxTaxKbn),
	DlvCorpAppointedKbn: toNumber(payload.DlvCorpAppointedKbn),
	RepeatCustFlg: toNumber(payload.RepeatCustFlg),
	StandardUsePointTax: toNumber(payload.StandardUsePointTax),
	StandardDiffTax: toNumber(payload.StandardDiffTax),
	ReducedUsePoint: toNumber(payload.ReducedUsePoint),
	ReducedUsePointTax: toNumber(payload.ReducedUsePointTax),
	ReducedDiffYen: toNumber(payload.ReducedDiffYen),
	ReducedDiffTax: toNumber(payload.ReducedDiffTax),
	ReducedTaxRateFlg: toNumber(payload.ReducedTaxRateFlg),
	StandardOrderYen: toNumber(payload.StandardOrderYen),
	StandardOrderTax: toNumber(payload.StandardOrderTax),
	ReducedOrderYen: toNumber(payload.ReducedOrderYen),
	ReducedOrderTax: toNumber(payload.ReducedOrderTax),
	
	// 日付型フィールド (Shipping APIでstring format: dateとして定義されているフィールド)
	ShopOrderDate: formatDate(payload.ShopOrderDate),
	DeliveryScheDate: formatDate(payload.DeliveryScheDate),
	ShipmentRequestDate: formatDate(payload.ShipmentRequestDate),
	OrderReceiptDate: formatDate(payload.OrderReceiptDate),
	DlvAppointedDate: formatDate(payload.DlvAppointedDate),
	NextDlvDate: formatDate(payload.NextDlvDate),
	PayDeadlineDate: formatDate(payload.PayDeadlineDate),
	ReportScheduleDate: formatDate(payload.ReportScheduleDate),
	PointLapseScheduleDate: formatDate(payload.PointLapseScheduleDate),
	RankEndDate: formatDate(payload.RankEndDate),
	
	// 日時型フィールド (Shipping APIでstring format: date-timeとして定義されているフィールド)
	DataCreateDate: formatDateTime(payload.DataCreateDate),
	
	// 文字列型フィールド (Shipping APIでstringとして定義されているフィールド)
	DlvCorpCd: nullIfEmpty(payload.DlvCorpCd),
	ShopCd: nullIfEmpty(payload.ShopCd),
	ShipmentNo: validateRequiredString(payload.ShipmentNo, "ShipmentNo"),
	ShipmentLineNo: validateRequiredString(payload.ShipmentLineNo, "ShipmentLineNo"),
	ItemCd: validateRequiredString(payload.ItemCd, "ItemCd"),
	SalesCommodityName: validateRequiredString(payload.SalesCommodityName, "SalesCommodityName"),
	WrappingServiceName: nullIfEmpty(payload.WrappingServiceName),
	SetItemCd: nullIfEmpty(payload.SetItemCd),
	SetSalesCommodityName: nullIfEmpty(payload.SetSalesCommodityName),
	ArrivalNo: nullIfEmpty(payload.ArrivalNo),
	ArrivalLineNo: nullIfEmpty(payload.ArrivalLineNo),
	Lot1: nullIfEmpty(payload.Lot1),
	Lot2: nullIfEmpty(payload.Lot2),
	CreateBy: validateRequiredString(payload.CreateBy, "CreateBy"),
	CreditCardCorpCd: nullIfEmpty(payload.CreditCardCorpCd),
	CustNo: validateRequiredString(payload.CustNo, "CustNo"),
	ZipNo: nullIfEmpty(payload.ZipNo),
	Adr1: nullIfEmpty(payload.Adr1),
	Adr2: nullIfEmpty(payload.Adr2),
	Adr3: nullIfEmpty(payload.Adr3),
	Adr4: nullIfEmpty(payload.Adr4),
	Adr5: nullIfEmpty(payload.Adr5),
	Adr6: nullIfEmpty(payload.Adr6),
	TelNo: nullIfEmpty(payload.TelNo),
	CustKanjiName: nullIfEmpty(payload.CustKanjiName),
	CustKanaName: nullIfEmpty(payload.CustKanaName),
	ClientZipNo: nullIfEmpty(payload.ClientZipNo),
	ClientAdr1: nullIfEmpty(payload.ClientAdr1),
	ClientAdr2: nullIfEmpty(payload.ClientAdr2),
	ClientAdr3: nullIfEmpty(payload.ClientAdr3),
	ClientAdr4: nullIfEmpty(payload.ClientAdr4),
	ClientAdr5: nullIfEmpty(payload.ClientAdr5),
	ClientAdr6: nullIfEmpty(payload.ClientAdr6),
	ClientTelNo: nullIfEmpty(payload.ClientTelNo),
	ClientKanjiName: nullIfEmpty(payload.ClientKanjiName),
	ClientKanaName: nullIfEmpty(payload.ClientKanaName),
	ClientCorpName: nullIfEmpty(payload.ClientCorpName),
	DestZipNo: nullIfEmpty(payload.DestZipNo),
	DestAdr1: nullIfEmpty(payload.DestAdr1),
	DestAdr2: nullIfEmpty(payload.DestAdr2),
	DestAdr3: nullIfEmpty(payload.DestAdr3),
	DestAdr4: nullIfEmpty(payload.DestAdr4),
	DestAdr5: nullIfEmpty(payload.DestAdr5),
	DestAdr6: nullIfEmpty(payload.DestAdr6),
	DestTelNo: nullIfEmpty(payload.DestTelNo),
	DestKanjiName: nullIfEmpty(payload.DestKanjiName),
	DestKanaName: nullIfEmpty(payload.DestKanaName),
	DestCorpName: nullIfEmpty(payload.DestCorpName),
	DlvAppointedTimePerDlvCorpKbn: nullIfEmpty(payload.DlvAppointedTimePerDlvCorpKbn),
	DlvAppointedTimePerDlvCorpName: nullIfEmpty(payload.DlvAppointedTimePerDlvCorpName),
	DlvCorpDetailKbn: nullIfEmpty(payload.DlvCorpDetailKbn),
	ArrivedShopNo1: nullIfEmpty(payload.ArrivedShopNo1),
	ArrivedShopNo2: nullIfEmpty(payload.ArrivedShopNo2),
	LiquidationShopNo1: nullIfEmpty(payload.LiquidationShopNo1),
	LiquidationShopNo2: nullIfEmpty(payload.LiquidationShopNo2),
	DlvInstructionComment: nullIfEmpty(payload.DlvInstructionComment),
	SentenceKbn1: nullIfEmpty(payload.SentenceKbn1),
	SentenceCd1: nullIfEmpty(payload.SentenceCd1),
	SentenceKbn2: nullIfEmpty(payload.SentenceKbn2),
	SentenceCd2: nullIfEmpty(payload.SentenceCd2),
	CustServiceRankName: nullIfEmpty(payload.CustServiceRankName),
	NextDlvItemCd1: nullIfEmpty(payload.NextDlvItemCd1),
	NextDlvSalesCommodityName1: nullIfEmpty(payload.NextDlvSalesCommodityName1),
	NextDlvCommoditySalesMethodName1: nullIfEmpty(payload.NextDlvCommoditySalesMethodName1),
	NextDlvItemCd2: nullIfEmpty(payload.NextDlvItemCd2),
	NextDlvSalesCommodityName2: nullIfEmpty(payload.NextDlvSalesCommodityName2),
	NextDlvCommoditySalesMethodName2: nullIfEmpty(payload.NextDlvCommoditySalesMethodName2),
	NextDlvItemCd3: nullIfEmpty(payload.NextDlvItemCd3),
	NextDlvSalesCommodityName3: nullIfEmpty(payload.NextDlvSalesCommodityName3),
	NextDlvCommoditySalesMethodName3: nullIfEmpty(payload.NextDlvCommoditySalesMethodName3),
	NextDlvItemCd4: nullIfEmpty(payload.NextDlvItemCd4),
	NextDlvSalesCommodityName4: nullIfEmpty(payload.NextDlvSalesCommodityName4),
	NextDlvCommoditySalesMethodName4: nullIfEmpty(payload.NextDlvCommoditySalesMethodName4),
	NextDlvItemCd5: nullIfEmpty(payload.NextDlvItemCd5),
	NextDlvSalesCommodityName5: nullIfEmpty(payload.NextDlvSalesCommodityName5),
	NextDlvCommoditySalesMethodName5: nullIfEmpty(payload.NextDlvCommoditySalesMethodName5),
	NextDlvItemCd6: nullIfEmpty(payload.NextDlvItemCd6),
	NextDlvSalesCommodityName6: nullIfEmpty(payload.NextDlvSalesCommodityName6),
	NextDlvCommoditySalesMethodName6: nullIfEmpty(payload.NextDlvCommoditySalesMethodName6),
	NextDlvItemCd7: nullIfEmpty(payload.NextDlvItemCd7),
	NextDlvSalesCommodityName7: nullIfEmpty(payload.NextDlvSalesCommodityName7),
	NextDlvCommoditySalesMethodName7: nullIfEmpty(payload.NextDlvCommoditySalesMethodName7),
	NextDlvItemCd8: nullIfEmpty(payload.NextDlvItemCd8),
	NextDlvSalesCommodityName8: nullIfEmpty(payload.NextDlvSalesCommodityName8),
	NextDlvCommoditySalesMethodName8: nullIfEmpty(payload.NextDlvCommoditySalesMethodName8),
	NextDlvItemCd9: nullIfEmpty(payload.NextDlvItemCd9),
	NextDlvSalesCommodityName9: nullIfEmpty(payload.NextDlvSalesCommodityName9),
	NextDlvCommoditySalesMethodName9: nullIfEmpty(payload.NextDlvCommoditySalesMethodName9),
	NextDlvItemCd10: nullIfEmpty(payload.NextDlvItemCd10),
	NextDlvSalesCommodityName10: nullIfEmpty(payload.NextDlvSalesCommodityName10),
	NextDlvCommoditySalesMethodName10: nullIfEmpty(payload.NextDlvCommoditySalesMethodName10),
	SentenceKbn3: nullIfEmpty(payload.SentenceKbn3),
	SentenceCd3: nullIfEmpty(payload.SentenceCd3),
	SentenceKbn4: nullIfEmpty(payload.SentenceKbn4),
	SentenceCd4: nullIfEmpty(payload.SentenceCd4),
	ExtKbnName: nullIfEmpty(payload.ExtKbnName),
	InspectMemo: nullIfEmpty(payload.InspectMemo),
	OCRCd: nullIfEmpty(payload.OCRCd),
	EAN128Cd: nullIfEmpty(payload.EAN128Cd),
	DestJISCd: nullIfEmpty(payload.DestJISCd),
	PromoCd: nullIfEmpty(payload.PromoCd),
	PromoName: nullIfEmpty(payload.PromoName),
	YobiKbn: nullIfEmpty(payload.YobiKbn),
	PointOccurComment: nullIfEmpty(payload.PointOccurComment)
}]]></ee:set-payload>
                </ee:message>
            </ee:transform>
            
            <!-- Call Shipping API for each record -->
            <logger doc:id="log-api-call" doc:name="Log API Call" level="INFO" message="Calling Shipping API for ShipmentNo: #[payload.ShipmentNo]"/>
            <http:request method="POST" doc:name="Call Shipping API" doc:id="call-shipping-api" config-ref="HTTP_Request_configuration" path="/api/shipping-instructions">
                <http:headers><![CDATA[#[{
	"Content-Type" : "application/json"
}]]]></http:headers>
            </http:request>
            <logger doc:id="log-api-success" doc:name="Log API Success" level="INFO" message="Successfully called Shipping API for ShipmentNo: #[payload.ShipmentNo]"/>
        </foreach>
        
        <logger doc:id="log-complete" doc:name="Log Completion" level="INFO" message="File processing completed: #[vars.originalFileName]"/>
    </flow>
</mule>
