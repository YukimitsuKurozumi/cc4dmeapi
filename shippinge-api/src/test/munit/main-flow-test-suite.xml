<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
		http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
	
	<munit:config name="main-flow-test-suite.xml" />
	
	<!-- ========================================== -->
	<!-- メインフローのテストケース -->
	<!-- ========================================== -->
	
	<!-- テストケース1: 正常処理 - 完全なデータでの処理 -->
	<munit:test name="main-flow-success-complete-data-test" doc:id="test-main-flow-success-complete">
		<munit:execution>
			<set-payload value='{
				"postalCode": "1000001",
				"tagNumber": "NM12345",
				"shippingCompanyCode": "05",
				"shippingCompanyDetailCode": "050",
				"shippingCompanyFixedFlag": "0",
				"deliveryTimeCode": "",
				"deliveryTimeName": "",
				"deliveryDesignatedDate": "0",
				"destinationPrefecture": "東京都"
			}' />
			<flow-ref name="post:\shipping-instructions:application\json:shipping-config" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals actual="#[payload.status]" expected="success" />
			<munit-tools:assert-equals actual="#[payload.message]" expected="配送拠点・配送会社判定が完了しました" />
			<munit-tools:assert-equals actual="#[payload.distributionCenter]" expected="KANTO_CENTER" />
			<munit-tools:assert-that expression="#[payload.shippingCompany]" is="#[MunitTools::notNullValue()]" />
			<munit-tools:assert-that expression="#[payload.apiEndpoint]" is="#[MunitTools::notNullValue()]" />
			<munit-tools:assert-that expression="#[payload.timestamp]" is="#[MunitTools::notNullValue()]" />
		</munit:validation>
	</munit:test>
	
	<!-- テストケース2: 正常処理 - 特別荷札番号での処理 -->
	<munit:test name="main-flow-success-special-tag-test" doc:id="test-main-flow-success-special">
		<munit:execution>
			<set-payload value='{
				"postalCode": "2000001",
				"tagNumber": "SP12345",
				"shippingCompanyCode": "05",
				"shippingCompanyDetailCode": "050",
				"shippingCompanyFixedFlag": "0",
				"deliveryTimeCode": "",
				"deliveryTimeName": "",
				"deliveryDesignatedDate": "0",
				"destinationPrefecture": "愛知県"
			}' />
			<flow-ref name="post:\shipping-instructions:application\json:shipping-config" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals actual="#[payload.status]" expected="success" />
			<munit-tools:assert-equals actual="#[payload.distributionCenter]" expected="SPECIAL_CENTER" />
			<munit-tools:assert-equals actual="#[payload.apiEndpoint]" expected="https://api.special.distribution.com/shipping" />
		</munit:validation>
	</munit:test>
	
	<!-- テストケース3: 正常処理 - 最小限のデータでの処理 -->
	<munit:test name="main-flow-success-minimal-data-test" doc:id="test-main-flow-success-minimal">
		<munit:execution>
			<set-payload value='{
				"postalCode": "3000001",
				"tagNumber": "NM99999"
			}' />
			<flow-ref name="post:\shipping-instructions:application\json:shipping-config" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals actual="#[payload.status]" expected="success" />
			<munit-tools:assert-equals actual="#[payload.distributionCenter]" expected="KANSAI_CENTER" />
			<munit-tools:assert-that expression="#[payload.shippingCompany]" is="#[MunitTools::notNullValue()]" />
		</munit:validation>
	</munit:test>
	
	<!-- テストケース4: 正常処理 - 配送会社変更ケース（コニポス） -->
	<munit:test name="main-flow-success-konipo-change-test" doc:id="test-main-flow-success-konipo">
		<munit:execution>
			<set-payload value='{
				"postalCode": "1000001",
				"tagNumber": "NM12345",
				"shippingCompanyCode": "05",
				"shippingCompanyDetailCode": "054",
				"shippingCompanyFixedFlag": "0",
				"deliveryTimeCode": "",
				"deliveryTimeName": "",
				"deliveryDesignatedDate": "0",
				"destinationPrefecture": "東京都"
			}' />
			<flow-ref name="post:\shipping-instructions:application\json:shipping-config" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals actual="#[payload.status]" expected="success" />
			<munit-tools:assert-equals actual="#[payload.distributionCenter]" expected="KANTO_CENTER" />
			<munit-tools:assert-that expression="#[payload.shippingCompany.shippingCompanyName]" is="#[MunitTools::equalTo('コニポス')]" />
		</munit:validation>
	</munit:test>
	
	<!-- テストケース5: 正常処理 - 配送会社変更ケース（佐川急便） -->
	<munit:test name="main-flow-success-sagawa-change-test" doc:id="test-main-flow-success-sagawa">
		<munit:execution>
			<set-payload value='{
				"postalCode": "2700001",
				"tagNumber": "NM12345",
				"shippingCompanyCode": "05",
				"shippingCompanyDetailCode": "050",
				"shippingCompanyFixedFlag": "0",
				"deliveryTimeCode": "06",
				"deliveryTimeName": "20時～21時",
				"deliveryDesignatedDate": "0",
				"destinationPrefecture": "大阪府"
			}' />
			<flow-ref name="post:\shipping-instructions:application\json:shipping-config" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals actual="#[payload.status]" expected="success" />
			<munit-tools:assert-equals actual="#[payload.distributionCenter]" expected="CHUBU_CENTER" />
			<munit-tools:assert-that expression="#[payload.shippingCompany.shippingCompanyName]" is="#[MunitTools::equalTo('佐川急便')]" />
		</munit:validation>
	</munit:test>
	
	<!-- テストケース6: 正常処理 - 郵便番号エリアが空の場合 -->
	<munit:test name="main-flow-success-empty-postal-area-test" doc:id="test-main-flow-success-empty-postal">
		<munit:execution>
			<set-payload value='{
				"postalCode": "1",
				"tagNumber": "NM12345"
			}' />
			<flow-ref name="post:\shipping-instructions:application\json:shipping-config" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals actual="#[payload.status]" expected="success" />
			<munit-tools:assert-equals actual="#[payload.distributionCenter]" expected="DEFAULT_CENTER" />
			<munit-tools:assert-equals actual="#[payload.postalCodeArea]" expected="" />
		</munit:validation>
	</munit:test>
	
	<!-- ========================================== -->
	<!-- エラーハンドリングのテストケース -->
	<!-- ========================================== -->
	
	<!-- テストケース7: APIKIT:BAD_REQUEST エラー -->
	<munit:test name="error-handler-bad-request-test" doc:id="test-error-bad-request">
		<munit:execution>
			<munit-tools:mock-when processor="apikit:router">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute attributeName="config-ref" whereValue="shipping-config" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:error typeId="APIKIT:BAD_REQUEST" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<set-payload value='{}' />
			<flow-ref name="shipping-main" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals actual="#[payload.message]" expected="Bad request" />
			<munit-tools:assert-equals actual="#[vars.httpStatus]" expected="400" />
		</munit:validation>
	</munit:test>
	
	<!-- テストケース8: APIKIT:NOT_FOUND エラー -->
	<munit:test name="error-handler-not-found-test" doc:id="test-error-not-found">
		<munit:execution>
			<munit-tools:mock-when processor="apikit:router">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute attributeName="config-ref" whereValue="shipping-config" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:error typeId="APIKIT:NOT_FOUND" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<set-payload value='{}' />
			<flow-ref name="shipping-main" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals actual="#[payload.message]" expected="Resource not found" />
			<munit-tools:assert-equals actual="#[vars.httpStatus]" expected="404" />
		</munit:validation>
	</munit:test>
	
	<!-- テストケース9: APIKIT:METHOD_NOT_ALLOWED エラー -->
	<munit:test name="error-handler-method-not-allowed-test" doc:id="test-error-method-not-allowed">
		<munit:execution>
			<munit-tools:mock-when processor="apikit:router">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute attributeName="config-ref" whereValue="shipping-config" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:error typeId="APIKIT:METHOD_NOT_ALLOWED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<set-payload value='{}' />
			<flow-ref name="shipping-main" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals actual="#[payload.message]" expected="Method not allowed" />
			<munit-tools:assert-equals actual="#[vars.httpStatus]" expected="405" />
		</munit:validation>
	</munit:test>
	
	<!-- テストケース10: APIKIT:NOT_ACCEPTABLE エラー -->
	<munit:test name="error-handler-not-acceptable-test" doc:id="test-error-not-acceptable">
		<munit:execution>
			<munit-tools:mock-when processor="apikit:router">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute attributeName="config-ref" whereValue="shipping-config" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:error typeId="APIKIT:NOT_ACCEPTABLE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<set-payload value='{}' />
			<flow-ref name="shipping-main" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals actual="#[payload.message]" expected="Not acceptable" />
			<munit-tools:assert-equals actual="#[vars.httpStatus]" expected="406" />
		</munit:validation>
	</munit:test>
	
	<!-- テストケース11: APIKIT:UNSUPPORTED_MEDIA_TYPE エラー -->
	<munit:test name="error-handler-unsupported-media-type-test" doc:id="test-error-unsupported-media-type">
		<munit:execution>
			<munit-tools:mock-when processor="apikit:router">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute attributeName="config-ref" whereValue="shipping-config" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:error typeId="APIKIT:UNSUPPORTED_MEDIA_TYPE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<set-payload value='{}' />
			<flow-ref name="shipping-main" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals actual="#[payload.message]" expected="Unsupported media type" />
			<munit-tools:assert-equals actual="#[vars.httpStatus]" expected="415" />
		</munit:validation>
	</munit:test>
	
	<!-- テストケース12: APIKIT:NOT_IMPLEMENTED エラー -->
	<munit:test name="error-handler-not-implemented-test" doc:id="test-error-not-implemented">
		<munit:execution>
			<munit-tools:mock-when processor="apikit:router">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute attributeName="config-ref" whereValue="shipping-config" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:error typeId="APIKIT:NOT_IMPLEMENTED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<set-payload value='{}' />
			<flow-ref name="shipping-main" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals actual="#[payload.message]" expected="Not Implemented" />
			<munit-tools:assert-equals actual="#[vars.httpStatus]" expected="501" />
		</munit:validation>
	</munit:test>
	
	<!-- テストケース13: shipping-console フロー - 正常処理 -->
	<munit:test name="shipping-console-success-test" doc:id="test-shipping-console-success">
		<munit:execution>
			<munit-tools:mock-when processor="apikit:console">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute attributeName="config-ref" whereValue="shipping-config" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload value="Console HTML Content" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<set-payload value='{}' />
			<flow-ref name="shipping-console" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals actual="#[payload]" expected="Console HTML Content" />
		</munit:validation>
	</munit:test>
	
	<!-- テストケース14: shipping-console フロー - NOT_FOUND エラー -->
	<munit:test name="shipping-console-not-found-test" doc:id="test-shipping-console-not-found">
		<munit:execution>
			<munit-tools:mock-when processor="apikit:console">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute attributeName="config-ref" whereValue="shipping-config" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:error typeId="APIKIT:NOT_FOUND" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<set-payload value='{}' />
			<flow-ref name="shipping-console" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals actual="#[payload.message]" expected="Resource not found" />
			<munit-tools:assert-equals actual="#[vars.httpStatus]" expected="404" />
		</munit:validation>
	</munit:test>

</mule>
